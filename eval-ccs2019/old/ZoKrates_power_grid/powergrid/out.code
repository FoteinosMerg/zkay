def aggregatedPowerConsumption(data1,data2,data3,data4,data5,data6,data7,startTime,endTime,aPC):
	totalPowerConsumption = ((((((data1 + data2) + data3) + data4) + data5) + data6) + data7)
	sym_0 = (totalPowerConsumption - aPC)
	# sym_1 = if sym_0 == 0 then 0 else 1 fi
	# sym_2 = if sym_0 == 0 then 1 else (1 / sym_0) fi
	sym_1 == (sym_0 * sym_2)
	sym_3 = (1 - sym_1)
	0 == (sym_3 * sym_0)
	result = ((sym_3 * 1) + (sym_1 * 0))
	return result
def main(private data1,private data2,private data3,private data4,private data5,private data6,private data7,startTime,endTime,aPC):
	aggregatedPowerConsumption_1_param_0 = data1
	aggregatedPowerConsumption_1_param_1 = data2
	aggregatedPowerConsumption_1_param_2 = data3
	aggregatedPowerConsumption_1_param_3 = data4
	aggregatedPowerConsumption_1_param_4 = data5
	aggregatedPowerConsumption_1_param_5 = data6
	aggregatedPowerConsumption_1_param_6 = data7
	aggregatedPowerConsumption_1_param_7 = startTime
	aggregatedPowerConsumption_1_param_8 = endTime
	aggregatedPowerConsumption_1_param_9 = aPC
	aggregatedPowerConsumption_1_totalPowerConsumption = ((((((aggregatedPowerConsumption_1_param_0 + aggregatedPowerConsumption_1_param_1) + aggregatedPowerConsumption_1_param_2) + aggregatedPowerConsumption_1_param_3) + aggregatedPowerConsumption_1_param_4) + aggregatedPowerConsumption_1_param_5) + aggregatedPowerConsumption_1_param_6)
	aggregatedPowerConsumption_1_sym_0 = (aggregatedPowerConsumption_1_totalPowerConsumption - aggregatedPowerConsumption_1_param_9)
	# aggregatedPowerConsumption_1_sym_1 = if aggregatedPowerConsumption_1_sym_0 == 0 then 0 else 1 fi
	# aggregatedPowerConsumption_1_sym_2 = if aggregatedPowerConsumption_1_sym_0 == 0 then 1 else (1 / aggregatedPowerConsumption_1_sym_0) fi
	aggregatedPowerConsumption_1_sym_1 == (aggregatedPowerConsumption_1_sym_0 * aggregatedPowerConsumption_1_sym_2)
	aggregatedPowerConsumption_1_sym_3 = (1 - aggregatedPowerConsumption_1_sym_1)
	0 == (aggregatedPowerConsumption_1_sym_3 * aggregatedPowerConsumption_1_sym_0)
	aggregatedPowerConsumption_1_result = ((aggregatedPowerConsumption_1_sym_3 * 1) + (aggregatedPowerConsumption_1_sym_1 * 0))
	return aggregatedPowerConsumption_1_result
